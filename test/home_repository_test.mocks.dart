// Mocks generated by Mockito 5.4.4 from annotations
// in maids_cc_task/test/home_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:maids_cc_task/app/app_pref.dart' as _i6;
import 'package:maids_cc_task/data/data_source/home_data_source/home_remote_data_source.dart'
    as _i9;
import 'package:maids_cc_task/data/network/network_info.dart' as _i4;
import 'package:maids_cc_task/data/params/home_params/add_new_todo_params.dart'
    as _i12;
import 'package:maids_cc_task/data/params/home_params/get_todos_params.dart'
    as _i10;
import 'package:maids_cc_task/data/params/home_params/update_todo_params.dart'
    as _i11;
import 'package:maids_cc_task/data/response/home_response/todos_response.dart'
    as _i3;
import 'package:maids_cc_task/domain/models/auth_model/user_model.dart' as _i2;
import 'package:maids_cc_task/domain/models/home_model/todos_model.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodosResponse_1 extends _i1.SmartFake implements _i3.TodosResponse {
  _FakeTodosResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoDataResponse_2 extends _i1.SmartFake
    implements _i3.TodoDataResponse {
  _FakeTodoDataResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [AppPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppPreferences extends _i1.Mock implements _i6.AppPreferences {
  MockAppPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> setUserToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  String getUserToken() => (super.noSuchMethod(
        Invocation.method(
          #getUserToken,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getUserToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<void> setUserRefreshToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserRefreshToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  String getUserRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getUserRefreshToken,
          [],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getUserRefreshToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i5.Future<void> setUser(_i2.UserModel? model) => (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i2.UserModel getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _FakeUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        ),
      ) as _i2.UserModel);

  @override
  _i5.Future<void> setTodoList(List<_i8.TodoDataModel>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTodoList,
          [todos],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTodoList() => (super.noSuchMethod(
        Invocation.method(
          #deleteTodoList,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i8.TodoDataModel> getTodoList() => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [],
        ),
        returnValue: <_i8.TodoDataModel>[],
      ) as List<_i8.TodoDataModel>);
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSource extends _i1.Mock
    implements _i9.HomeRemoteDataSource {
  MockHomeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.TodosResponse> getAllTodos(_i10.GetTodosParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTodos,
          [params],
        ),
        returnValue: _i5.Future<_i3.TodosResponse>.value(_FakeTodosResponse_1(
          this,
          Invocation.method(
            #getAllTodos,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.TodosResponse>);

  @override
  _i5.Future<_i3.TodoDataResponse> updateTodo(_i11.UpdateTodoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.TodoDataResponse>.value(_FakeTodoDataResponse_2(
          this,
          Invocation.method(
            #updateTodo,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.TodoDataResponse>);

  @override
  _i5.Future<_i3.TodoDataResponse> addNewTodo(_i12.AddNewTodoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewTodo,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.TodoDataResponse>.value(_FakeTodoDataResponse_2(
          this,
          Invocation.method(
            #addNewTodo,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.TodoDataResponse>);

  @override
  _i5.Future<_i3.TodoDataResponse> deleteTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.TodoDataResponse>.value(_FakeTodoDataResponse_2(
          this,
          Invocation.method(
            #deleteTodo,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.TodoDataResponse>);
}

// Mocks generated by Mockito 5.4.4 from annotations
// in maids_cc_task/test/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:maids_cc_task/app/app_pref.dart' as _i7;
import 'package:maids_cc_task/data/data_source/auth_data_source/auth_remote_data_source.dart'
    as _i10;
import 'package:maids_cc_task/data/network/network_info.dart' as _i5;
import 'package:maids_cc_task/data/params/auth_params/login_params.dart'
    as _i12;
import 'package:maids_cc_task/data/params/auth_params/token_params.dart'
    as _i11;
import 'package:maids_cc_task/data/response/auth_response/token_response.dart'
    as _i3;
import 'package:maids_cc_task/data/response/auth_response/user_response.dart'
    as _i4;
import 'package:maids_cc_task/domain/models/auth_model/user_model.dart' as _i2;
import 'package:maids_cc_task/domain/models/home_model/todos_model.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenResponse_1 extends _i1.SmartFake implements _i3.TokenResponse {
  _FakeTokenResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponse_2 extends _i1.SmartFake implements _i4.UserResponse {
  _FakeUserResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [AppPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppPreferences extends _i1.Mock implements _i7.AppPreferences {
  MockAppPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> setUserToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserToken,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  String getUserToken() => (super.noSuchMethod(
        Invocation.method(
          #getUserToken,
          [],
        ),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getUserToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> setUserRefreshToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserRefreshToken,
          [token],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  String getUserRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getUserRefreshToken,
          [],
        ),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.method(
            #getUserRefreshToken,
            [],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> setUser(_i2.UserModel? model) => (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [model],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i2.UserModel getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _FakeUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        ),
      ) as _i2.UserModel);

  @override
  _i6.Future<void> setTodoList(List<_i9.TodoDataModel>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTodoList,
          [todos],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteTodoList() => (super.noSuchMethod(
        Invocation.method(
          #deleteTodoList,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  List<_i9.TodoDataModel> getTodoList() => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [],
        ),
        returnValue: <_i9.TodoDataModel>[],
      ) as List<_i9.TodoDataModel>);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i10.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.TokenResponse> getRefreshToken(_i11.TokenParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [params],
        ),
        returnValue: _i6.Future<_i3.TokenResponse>.value(_FakeTokenResponse_1(
          this,
          Invocation.method(
            #getRefreshToken,
            [params],
          ),
        )),
      ) as _i6.Future<_i3.TokenResponse>);

  @override
  _i6.Future<_i4.UserResponse> login(_i12.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [params],
        ),
        returnValue: _i6.Future<_i4.UserResponse>.value(_FakeUserResponse_2(
          this,
          Invocation.method(
            #login,
            [params],
          ),
        )),
      ) as _i6.Future<_i4.UserResponse>);
}
